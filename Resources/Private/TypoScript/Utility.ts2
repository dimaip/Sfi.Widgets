# Render element with its own object
prototype(Sfi.Shared:AutoRender) < prototype(TYPO3.TypoScript:Case) {
	default{
		condition = ${true}
		type = ${q(node).property('_nodeType')}			
	}
}

# Wrap AutoRender with tag. You can also use tag atrributes and other properties
prototype(Sfi.Shared:AutoRenderWithTag) < prototype(TYPO3.TypoScript:Tag) {
	content = Sfi.Shared:AutoRender
	tagName = 'div'
}

# This is a helper TypoScript object which is used to render all of the child elements
# of a current node.
prototype(TYPO3.Neos:ContentCollectionRenderer) < prototype(TYPO3.TypoScript:Collection) {
	# Set context removedContentShown to get removed nodes too.
	# Needed for publish function to be able to publish removed nodes.
	collection = ${q(node).context({'removedContentShown': true}).children()}
	# Render every item by its own TS object
	itemRenderer = TYPO3.Neos:ContentCase
	itemName = 'node'
	iterationName = 'iterator'
}
