include: **/*.ts2

prototype(Sfi.Shared:TextWithImage) {
	attributes.class = ${'TextWithImage ' + node.properties.variant}
	headline = TYPO3.Neos.NodeTypes:Headline{
		@override.node = ${q(node).children('headline').get(0)}
	}
	text = TYPO3.Neos.NodeTypes:Text{
		@override.node = ${q(node).children('text').get(0)}
	}
	image = TYPO3.Neos.NodeTypes:Image{
		@override.node = ${q(node).children('image').get(0)}
	}
	prototype(TYPO3.Neos.NodeTypes:Image){
		maximumWidth = 600
	}
}

prototype(Sfi.Shared:Asset) {
	attributes.class = ${node.properties.variant == 'Asset-Button' ? 'Button AssetButton' : 'ButtonInline AssetInline'}
	attributes.href = ${'asset://' + node.properties.asset.identifier}
	attributes.href.@process.convertUris = TYPO3.Neos:ConvertUris
}

prototype(Sfi.Shared:Link) {
	attributes.class = ${node.properties.variant == 'Link-Button' ? 'Button LinkButton' : 'ButtonInline LinkInline'}
	attributes.href = ${node.properties.target}
	attributes.href.@process.convertUris = TYPO3.Neos:ConvertUris {
		forceConversion = true
	}
}

prototype(Sfi.Shared:ImageLink) {
	attributes.class = ${'ImageLink ' + node.properties.variant}
	maximumWidth = 300
	maximumHeight = 250
	allowCropping = TRUE
	allowUpScaling = TRUE
	link.@process.convertUris = TYPO3.Neos:ConvertUris {
		forceConversion = TRUE
	}
}

prototype(Sfi.Shared:Well) < prototype(TYPO3.TypoScript:Tag) {
	iterator = ${iterator}
	attributes.class = 'Well'
	content = TYPO3.Neos:ContentCollectionRenderer
	# Add contentElementWrapping so it would be possible to edit column's properties
	@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
}
